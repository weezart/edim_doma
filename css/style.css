/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'Open Sans';
  font-display: swap;
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-regular.woff2") format("woff2"), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-regular.woff") format("woff"); }

@font-face {
  font-family: 'Open Sans';
  font-display: swap;
  font-style: normal;
  font-weight: 700;
  src: local(""), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-700.woff2") format("woff2"), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-700.woff") format("woff"); }

@font-face {
  font-family: 'Noto Serif';
  font-display: swap;
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-regular.woff2") format("woff2"), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-regular.woff") format("woff"); }

@font-face {
  font-family: 'Noto Serif';
  font-display: swap;
  font-style: normal;
  font-weight: 700;
  src: local(""), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-700.woff2") format("woff2"), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-700.woff") format("woff"); }

@font-face {
  font-family: 'Open Sans';
  font-display: swap;
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-regular.woff2") format("woff2"), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-regular.woff") format("woff"); }

@font-face {
  font-family: 'Open Sans';
  font-display: swap;
  font-style: normal;
  font-weight: 700;
  src: local(""), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-700.woff2") format("woff2"), url("../fonts/Open-Sans/open-sans-v18-latin_cyrillic-700.woff") format("woff"); }

@font-face {
  font-family: 'Noto Serif';
  font-display: swap;
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-regular.woff2") format("woff2"), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-regular.woff") format("woff"); }

@font-face {
  font-family: 'Noto Serif';
  font-display: swap;
  font-style: normal;
  font-weight: 700;
  src: local(""), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-700.woff2") format("woff2"), url("../fonts/Noto/noto-serif-v9-latin_cyrillic-700.woff") format("woff"); }

*,
*::before,
*::after {
  box-sizing: inherit; }

html {
  box-sizing: border-box; }

.content-box-component {
  box-sizing: content-box; }

body {
  font: 400 15px/25px "Open Sans", sans-serif;
  color: #888888;
  background-color: #ffffff; }

.container {
  margin: 0 auto;
  width: 1210px;
  padding: 0 10px; }

.section-title {
  position: relative;
  margin: 0 0 5px;
  font: 600 32px/1.3125 "Noto Serif", serif;
  color: #111111;
  letter-spacing: -0.012em; }

.section-description {
  margin: 0 0 38px;
  font: 600 20px/1.4 "Noto Serif", serif;
  color: #111111;
  position: relative;
  width: 937px;
  letter-spacing: -0.01em; }

.section-image {
  position: absolute;
  right: 0;
  top: 0;
  width: 265px; }
  .top-soviets .section-image {
    top: -38px;
    right: -64px; }
  .section-image img {
    display: block;
    width: 100%;
    height: auto; }

.top-soviets {
  position: relative;
  padding: 18px 0 0; }

.announce-list {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  margin: 0 -10px; }

.announce {
  flex: none;
  margin: 0 10px 20px;
  width: 580px; }

.announce__image {
  position: relative;
  display: block;
  border-radius: 5px;
  overflow: hidden; }
  .announce__image::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.32), rgba(0, 0, 0, 0.32)), linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 50.52%, rgba(0, 0, 0, 0.2) 80.21%); }
  .announce__image img {
    display: block;
    width: 100%;
    height: auto; }

.announce__category {
  display: block;
  font: 700 11px/16px "Open Sans", sans-serif;
  color: #66B87E;
  text-transform: uppercase;
  letter-spacing: 0.06em; }
  .announce-list--top .announce__category {
    margin: 16px 0 9px; }
  .announce__category a {
    text-decoration: none;
    color: inherit; }
    .announce__category a:hover {
      text-decoration: none; }

.announce__title {
  margin: 0 0 6px;
  font: 600 20px/1.4 "Noto Serif", serif;
  color: #111111;
  letter-spacing: -0.01em; }
  .announce__title a {
    color: inherit;
    text-decoration: none; }

.announce__description {
  margin: 0 0 10px;
  font: 500 15px/1.6666 "Open Sans", sans-serif;
  color: #4C4C4C; }

.announce__author {
  display: flex;
  align-items: center; }

.announce__author-image {
  margin: 0 6px 0 0;
  width: 20px;
  height: 20px;
  overflow: hidden;
  border-radius: 50%; }

.announce__author-info {
  font: 400 13px/1.3846 "Open Sans", sans-serif;
  color: #4C4C4C; }
  .announce__author-info a {
    color: inherit;
    text-decoration: none; }

.breadcrumbs {
  margin: 0;
  padding: 0 0 15px 0; }
  .breadcrumbs ul {
    display: flex;
    margin: 0;
    padding: 0;
    list-style: none; }
    .breadcrumbs ul li {
      padding: 0; }

.breadcrumbs__item {
  color: #888888;
  font: 400 11px/16px "Open Sans", sans-serif; }
  .breadcrumbs__item:not(:last-child) {
    position: relative; }
    .breadcrumbs__item:not(:last-child)::after {
      margin: 0 5px;
      display: inline-block;
      content: '\002F';
      speak: none;
      font-style: normal;
      font-weight: normal;
      font-variant: normal;
      text-transform: none;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale; }
  .breadcrumbs__item a {
    color: inherit;
    text-decoration: none;
    border: 0;
    font: inherit; }
    .breadcrumbs__item a:hover {
      color: #EB4C32; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
